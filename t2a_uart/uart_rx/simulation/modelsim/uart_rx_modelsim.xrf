vendor_name = ModelSim
source_file = 1, /home/maruthi/intelFPGA_lite/20.1/quartus/t2a_uart/uart_rx/uart_rx.out.sdc
source_file = 1, /home/maruthi/intelFPGA_lite/20.1/quartus/t2a_uart/uart_rx/code/uart_rx.v
source_file = 1, /home/maruthi/intelFPGA_lite/20.1/quartus/t2a_uart/uart_rx/db/uart_rx.cbx.xml
design_name = uart_rx
instance = comp, \rx_msg[0]~output , rx_msg[0]~output, uart_rx, 1
instance = comp, \rx_msg[1]~output , rx_msg[1]~output, uart_rx, 1
instance = comp, \rx_msg[2]~output , rx_msg[2]~output, uart_rx, 1
instance = comp, \rx_msg[3]~output , rx_msg[3]~output, uart_rx, 1
instance = comp, \rx_msg[4]~output , rx_msg[4]~output, uart_rx, 1
instance = comp, \rx_msg[5]~output , rx_msg[5]~output, uart_rx, 1
instance = comp, \rx_msg[6]~output , rx_msg[6]~output, uart_rx, 1
instance = comp, \rx_msg[7]~output , rx_msg[7]~output, uart_rx, 1
instance = comp, \rx_parity~output , rx_parity~output, uart_rx, 1
instance = comp, \rx_complete~output , rx_complete~output, uart_rx, 1
instance = comp, \clk_3125~input , clk_3125~input, uart_rx, 1
instance = comp, \clk_3125~inputclkctrl , clk_3125~inputclkctrl, uart_rx, 1
instance = comp, \rx~input , rx~input, uart_rx, 1
instance = comp, \Add0~0 , Add0~0, uart_rx, 1
instance = comp, \Add0~2 , Add0~2, uart_rx, 1
instance = comp, \Add0~4 , Add0~4, uart_rx, 1
instance = comp, \Add0~6 , Add0~6, uart_rx, 1
instance = comp, \Selector6~0 , Selector6~0, uart_rx, 1
instance = comp, \Add0~8 , Add0~8, uart_rx, 1
instance = comp, \Selector5~0 , Selector5~0, uart_rx, 1
instance = comp, \clk_counter[4] , clk_counter[4], uart_rx, 1
instance = comp, \Equal0~2 , Equal0~2, uart_rx, 1
instance = comp, \Selector1~0 , Selector1~0, uart_rx, 1
instance = comp, \state.S_START , state.S_START, uart_rx, 1
instance = comp, \Selector0~0 , Selector0~0, uart_rx, 1
instance = comp, \Selector0~1 , Selector0~1, uart_rx, 1
instance = comp, \state.S_IDLE , state.S_IDLE, uart_rx, 1
instance = comp, \clk_counter[3] , clk_counter[3], uart_rx, 1
instance = comp, \Equal0~1 , Equal0~1, uart_rx, 1
instance = comp, \clk_counter[0]~0 , clk_counter[0]~0, uart_rx, 1
instance = comp, \Selector8~0 , Selector8~0, uart_rx, 1
instance = comp, \clk_counter[1] , clk_counter[1], uart_rx, 1
instance = comp, \rx_msg[0]~0 , rx_msg[0]~0, uart_rx, 1
instance = comp, \Selector9~0 , Selector9~0, uart_rx, 1
instance = comp, \clk_counter[0] , clk_counter[0], uart_rx, 1
instance = comp, \Equal0~0 , Equal0~0, uart_rx, 1
instance = comp, \Selector4~2 , Selector4~2, uart_rx, 1
instance = comp, \Selector3~4 , Selector3~4, uart_rx, 1
instance = comp, \Selector3~3 , Selector3~3, uart_rx, 1
instance = comp, \bit_counter[0]~0 , bit_counter[0]~0, uart_rx, 1
instance = comp, \bit_counter[2]~1 , bit_counter[2]~1, uart_rx, 1
instance = comp, \bit_counter[2] , bit_counter[2], uart_rx, 1
instance = comp, \Selector2~0 , Selector2~0, uart_rx, 1
instance = comp, \Selector2~1 , Selector2~1, uart_rx, 1
instance = comp, \state.S_DATA , state.S_DATA, uart_rx, 1
instance = comp, \bit_counter[0]~2 , bit_counter[0]~2, uart_rx, 1
instance = comp, \bit_counter[0] , bit_counter[0], uart_rx, 1
instance = comp, \bit_counter[1]~3 , bit_counter[1]~3, uart_rx, 1
instance = comp, \bit_counter[1] , bit_counter[1], uart_rx, 1
instance = comp, \Add1~0 , Add1~0, uart_rx, 1
instance = comp, \Selector3~1 , Selector3~1, uart_rx, 1
instance = comp, \Selector3~2 , Selector3~2, uart_rx, 1
instance = comp, \Selector3~5 , Selector3~5, uart_rx, 1
instance = comp, \state.S_PARITY , state.S_PARITY, uart_rx, 1
instance = comp, \Selector4~3 , Selector4~3, uart_rx, 1
instance = comp, \state.S_STOP , state.S_STOP, uart_rx, 1
instance = comp, \Selector7~0 , Selector7~0, uart_rx, 1
instance = comp, \clk_counter[2] , clk_counter[2], uart_rx, 1
instance = comp, \Equal1~0 , Equal1~0, uart_rx, 1
instance = comp, \data_shift_reg[0]~0 , data_shift_reg[0]~0, uart_rx, 1
instance = comp, \data_shift_reg[0] , data_shift_reg[0], uart_rx, 1
instance = comp, \rx_msg[0]~reg0feeder , rx_msg[0]~reg0feeder, uart_rx, 1
instance = comp, \rx_msg[0]~reg0 , rx_msg[0]~reg0, uart_rx, 1
instance = comp, \data_shift_reg[1]~feeder , data_shift_reg[1]~feeder, uart_rx, 1
instance = comp, \data_shift_reg[1] , data_shift_reg[1], uart_rx, 1
instance = comp, \rx_msg[1]~reg0feeder , rx_msg[1]~reg0feeder, uart_rx, 1
instance = comp, \rx_msg[1]~reg0 , rx_msg[1]~reg0, uart_rx, 1
instance = comp, \data_shift_reg[2]~feeder , data_shift_reg[2]~feeder, uart_rx, 1
instance = comp, \data_shift_reg[2] , data_shift_reg[2], uart_rx, 1
instance = comp, \rx_msg[2]~reg0feeder , rx_msg[2]~reg0feeder, uart_rx, 1
instance = comp, \rx_msg[2]~reg0 , rx_msg[2]~reg0, uart_rx, 1
instance = comp, \data_shift_reg[3]~feeder , data_shift_reg[3]~feeder, uart_rx, 1
instance = comp, \data_shift_reg[3] , data_shift_reg[3], uart_rx, 1
instance = comp, \rx_msg[3]~reg0 , rx_msg[3]~reg0, uart_rx, 1
instance = comp, \data_shift_reg[4] , data_shift_reg[4], uart_rx, 1
instance = comp, \rx_msg[4]~reg0feeder , rx_msg[4]~reg0feeder, uart_rx, 1
instance = comp, \rx_msg[4]~reg0 , rx_msg[4]~reg0, uart_rx, 1
instance = comp, \data_shift_reg[5]~feeder , data_shift_reg[5]~feeder, uart_rx, 1
instance = comp, \data_shift_reg[5] , data_shift_reg[5], uart_rx, 1
instance = comp, \rx_msg[5]~reg0feeder , rx_msg[5]~reg0feeder, uart_rx, 1
instance = comp, \rx_msg[5]~reg0 , rx_msg[5]~reg0, uart_rx, 1
instance = comp, \data_shift_reg[6]~feeder , data_shift_reg[6]~feeder, uart_rx, 1
instance = comp, \data_shift_reg[6] , data_shift_reg[6], uart_rx, 1
instance = comp, \rx_msg[6]~reg0feeder , rx_msg[6]~reg0feeder, uart_rx, 1
instance = comp, \rx_msg[6]~reg0 , rx_msg[6]~reg0, uart_rx, 1
instance = comp, \data_shift_reg[7]~feeder , data_shift_reg[7]~feeder, uart_rx, 1
instance = comp, \data_shift_reg[7] , data_shift_reg[7], uart_rx, 1
instance = comp, \rx_msg[7]~reg0 , rx_msg[7]~reg0, uart_rx, 1
instance = comp, \sampled_parity~0 , sampled_parity~0, uart_rx, 1
instance = comp, \rx_parity~reg0feeder , rx_parity~reg0feeder, uart_rx, 1
instance = comp, \rx_parity~reg0 , rx_parity~reg0, uart_rx, 1
instance = comp, \rx_complete~0 , rx_complete~0, uart_rx, 1
instance = comp, \rx_complete~reg0 , rx_complete~reg0, uart_rx, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
