vendor_name = ModelSim
source_file = 1, /home/maruthi/intelFPGA_lite/20.1/quartus/t2a_uart/uart_tx/code/uart_tx.v
source_file = 1, /home/maruthi/intelFPGA_lite/20.1/quartus/t2a_uart/uart_tx/db/uart_tx.cbx.xml
design_name = uart_tx
instance = comp, \tx~output , tx~output, uart_tx, 1
instance = comp, \tx_done~output , tx_done~output, uart_tx, 1
instance = comp, \clk_3125~input , clk_3125~input, uart_tx, 1
instance = comp, \clk_3125~inputclkctrl , clk_3125~inputclkctrl, uart_tx, 1
instance = comp, \tx_start~input , tx_start~input, uart_tx, 1
instance = comp, \Selector12~0 , Selector12~0, uart_tx, 1
instance = comp, \Selector3~0 , Selector3~0, uart_tx, 1
instance = comp, \clk_counter[0]~feeder , clk_counter[0]~feeder, uart_tx, 1
instance = comp, \clk_counter[0] , clk_counter[0], uart_tx, 1
instance = comp, \Selector2~0 , Selector2~0, uart_tx, 1
instance = comp, \clk_counter[1] , clk_counter[1], uart_tx, 1
instance = comp, \Add0~0 , Add0~0, uart_tx, 1
instance = comp, \Selector1~0 , Selector1~0, uart_tx, 1
instance = comp, \clk_counter[2] , clk_counter[2], uart_tx, 1
instance = comp, \Add0~1 , Add0~1, uart_tx, 1
instance = comp, \Selector0~0 , Selector0~0, uart_tx, 1
instance = comp, \clk_counter[3] , clk_counter[3], uart_tx, 1
instance = comp, \Equal0~0 , Equal0~0, uart_tx, 1
instance = comp, \bit_counter[0]~9 , bit_counter[0]~9, uart_tx, 1
instance = comp, \bit_counter[0] , bit_counter[0], uart_tx, 1
instance = comp, \bit_counter[2]~10 , bit_counter[2]~10, uart_tx, 1
instance = comp, \bit_counter[2]~11 , bit_counter[2]~11, uart_tx, 1
instance = comp, \bit_counter[2] , bit_counter[2], uart_tx, 1
instance = comp, \bit_counter[0]~8 , bit_counter[0]~8, uart_tx, 1
instance = comp, \Selector11~0 , Selector11~0, uart_tx, 1
instance = comp, \state.S_DATA , state.S_DATA, uart_tx, 1
instance = comp, \bit_counter[0]~3 , bit_counter[0]~3, uart_tx, 1
instance = comp, \bit_counter[0]~5 , bit_counter[0]~5, uart_tx, 1
instance = comp, \bit_counter[0]~6 , bit_counter[0]~6, uart_tx, 1
instance = comp, \bit_counter[1]~2 , bit_counter[1]~2, uart_tx, 1
instance = comp, \bit_counter[1]~7 , bit_counter[1]~7, uart_tx, 1
instance = comp, \bit_counter[1] , bit_counter[1], uart_tx, 1
instance = comp, \bit_counter[0]~4 , bit_counter[0]~4, uart_tx, 1
instance = comp, \Selector9~3 , Selector9~3, uart_tx, 1
instance = comp, \Selector9~2 , Selector9~2, uart_tx, 1
instance = comp, \Selector10~0 , Selector10~0, uart_tx, 1
instance = comp, \state.S_START , state.S_START, uart_tx, 1
instance = comp, \Selector12~1 , Selector12~1, uart_tx, 1
instance = comp, \Selector12~2 , Selector12~2, uart_tx, 1
instance = comp, \state.S_PARITY , state.S_PARITY, uart_tx, 1
instance = comp, \state.S_STOP~0 , state.S_STOP~0, uart_tx, 1
instance = comp, \state.S_STOP , state.S_STOP, uart_tx, 1
instance = comp, \Selector14~0 , Selector14~0, uart_tx, 1
instance = comp, \state.S_DONE , state.S_DONE, uart_tx, 1
instance = comp, \Selector9~4 , Selector9~4, uart_tx, 1
instance = comp, \state.S_IDLE , state.S_IDLE, uart_tx, 1
instance = comp, \Selector7~0 , Selector7~0, uart_tx, 1
instance = comp, \data[2]~input , data[2]~input, uart_tx, 1
instance = comp, \data[1]~input , data[1]~input, uart_tx, 1
instance = comp, \data[0]~input , data[0]~input, uart_tx, 1
instance = comp, \parity_type~input , parity_type~input, uart_tx, 1
instance = comp, \parity_bit_reg~0 , parity_bit_reg~0, uart_tx, 1
instance = comp, \data[5]~input , data[5]~input, uart_tx, 1
instance = comp, \data[3]~input , data[3]~input, uart_tx, 1
instance = comp, \data[4]~input , data[4]~input, uart_tx, 1
instance = comp, \data[6]~input , data[6]~input, uart_tx, 1
instance = comp, \parity_bit_reg~1 , parity_bit_reg~1, uart_tx, 1
instance = comp, \data[7]~input , data[7]~input, uart_tx, 1
instance = comp, \parity_bit_reg~2 , parity_bit_reg~2, uart_tx, 1
instance = comp, \data_reg[3] , data_reg[3], uart_tx, 1
instance = comp, \data_reg[2] , data_reg[2], uart_tx, 1
instance = comp, \data_reg[1] , data_reg[1], uart_tx, 1
instance = comp, \data_reg[0] , data_reg[0], uart_tx, 1
instance = comp, \Mux0~2 , Mux0~2, uart_tx, 1
instance = comp, \Mux0~3 , Mux0~3, uart_tx, 1
instance = comp, \data_reg[7]~feeder , data_reg[7]~feeder, uart_tx, 1
instance = comp, \data_reg[7] , data_reg[7], uart_tx, 1
instance = comp, \data_reg[6] , data_reg[6], uart_tx, 1
instance = comp, \data_reg[4] , data_reg[4], uart_tx, 1
instance = comp, \data_reg[5] , data_reg[5], uart_tx, 1
instance = comp, \Mux0~0 , Mux0~0, uart_tx, 1
instance = comp, \Mux0~1 , Mux0~1, uart_tx, 1
instance = comp, \Selector8~0 , Selector8~0, uart_tx, 1
instance = comp, \Selector8~1 , Selector8~1, uart_tx, 1
instance = comp, \tx_done~0 , tx_done~0, uart_tx, 1
instance = comp, \tx_done~1 , tx_done~1, uart_tx, 1
instance = comp, \tx_done~reg0 , tx_done~reg0, uart_tx, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
